version: 2.1
description: FaunaDB JVM Driver Tests

executors:
  core:
    parameters:
      version:
        type: enum
        enum: ["stable", "nightly"]
    resource_class: large
    docker:
      - image: openjdk:11
      - image: gcr.io/faunadb-cloud/faunadb/enterprise/<<parameters.version>>:latest
        name: core
        auth:
          username: _json_key
          password: $GCR_KEY
    environment:
      SBT_VERSION: 1.3.13
      FAUNA_ROOT_KEY: secret
      FAUNA_DOMAIN: core
      FAUNA_SCHEME: http
      FAUNA_PORT: 8443
      FAUNA_TIMEOUT: 60s

commands:
  build_and_test:
    description: "Run JVM tests"
    steps:
      # TODO: [DRV-222] Evaluate using an image
      # with sbt preinstalled in it instead
      - run:
          name: Get sbt binary
          command: |
            apt update && apt install -y curl
            curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
            dpkg -i sbt-$SBT_VERSION.deb
            rm sbt-$SBT_VERSION.deb
            apt-get update
            apt-get install -y git
            apt-get clean && apt-get autoclean

      - checkout

      - restore_cache:
          keys:
          - v1-deps-{{ checksum "build.sbt" }}

      - run:
          name: Compile 2.11
          command: sbt ++2.11.12 compileAll

      - run:
          name: Compile 2.12
          command: sbt ++2.12.12 compileAll

      - save_cache:
          paths:
          - ~/.ivy2
          key: v1-deps-{{ checksum "build.sbt" }}

      - run:
          name: Test 2.11
          command: sbt ++2.11.12 coverage test coverageReport

      - run:
          name: Test 2.12
          command: sbt ++2.12.12 coverage test coverageReport

      - run:
          name: Load Test 2.11
          command: sbt ++2.11.12 load:test

      - run:
          name: Load Test 2.12
          command: sbt ++2.12.12 load:test

      - run:
          when: always
          name: Gather results
          command: |
            # TODO: save results for 2.11 as well (DRV-222).
            mkdir -p results/{tests,coverage}
            cp **/target/test-reports/*.xml results/tests/
            cp -r faunadb-scala/target/scala-2.12/*coverage-report/ results/coverage/

      - store_test_results:
          path: results/

jobs:
  core-stable:
    executor:
      name: core
      version: stable
    steps:
      - build_and_test

  core-nightly:
    executor:
      name: core
      version: nightly
    steps:
      - build_and_test

workflows:
  version: 2
  build_and_test:
    jobs:
      - core-stable:
          context: faunadb-drivers
      - core-nightly:
          context: faunadb-drivers
